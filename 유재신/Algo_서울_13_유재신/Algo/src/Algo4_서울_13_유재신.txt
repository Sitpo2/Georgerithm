1) 슈도코드
 static hanoi(int n, char A, char B, char C) //n은 원반 수, A는 처음기둥, B는 중앙, C는 마지막
 
 if(n==1)
printf("%c -> %c\n), A, C) // 원반이 1개이면 A에서 C로 무조건 가게됨
 
 if(n>1) 
 hanoi(n-1, A, C, B) //원반이 1보다 크면 n-1개를 우선 보조기둥인 B로 C를 경유하여 보내야함
printf("%c -> %c\n), A, C) // 가장 밑에 있는 원반을 A에서 C로 보냄
 hanoi(n-1, B, A, C) // 마지막으로 보조기둥 B에 있는 n-1개의 원반들을 A를 활용하여 C로 보내야 함
 
 
 2) 결국 중요한 것은 반복된다는 점이다. 
 원반이 2개일 경우 -> 첫번째 원반을 두번쨰로 옮기고, 마지막 원반을 세번째로 옮기고, 두번째 기둥에서 세번째 기둥으로 옮겨야 함.
 원반이 3개일 경우 -> 첫번째, 두번째 원반을 B로 옮기고, 마지막 원반을 C로 옮기고, B의 2개 원반을 C로 옮겨야 한다.
 
 -> 이를 통해 보았을 때 똑같은 과정이 반복된다는 점을 알 수 있다.
 
 
 3) 
 A->B
 A->C
 B->C
 A->B
 C->A
 C->B
 A->B
 A->C // 마지막 원반이 가장 오른쪽으로 옮겨짐
 B->C
 B->A
 C->A
 B->C // 세번째 원반 가장 오른쪽으로
 A->B
 A->C // 두번쨰 원반 
 B->C // 첫번째 원반
 
 답: 15번